@import 'fontello.css';
@import url(https://fonts.googleapis.com/css?family=Montserrat);

$bgColor: #1a1a1a;
$uiColor: #262626;
$resultsColor: #282828;

$shadowColor: #131313;


$highlightshadow: 1px 1px #000;

$activeColor: #e337aa;
$activeBg: #da19aa;
$activeColor2: #36e379;
$queueColor: #ffbe05;

$fontColor: #aaaaaa;
$hoverColor: #ffffff;
$altColor: #62717A;

$frontColor: #ffffff;

$errorColor: #b34341;

$menuBg: #272727;
$menuColor: #aaaaaa;
$menuHover: #cdcdcd;

@mixin border-radius($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	-ms-border-radius: $radius;
	border-radius: $radius;
}

@mixin transform($transforms) {
	-moz-transform: $transforms;
	-o-transform: $transforms;
	-ms-transform: $transforms;
	-webkit-transform: $transforms;
	transform: $transforms;
}

@mixin display-flex(){
	display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	display: -ms-flexbox;      /* TWEENER - IE 10 */
	display: -webkit-flex;     /* NEW - Chrome */
	display: flex;
}

@mixin flex-direction($dir){
	-webkit-flex-direction: $dir;
	-ms-flex-direction: $dir;
	flex-direction: $dir;
}

@mixin flex-align-items($val){
	-webkit-align-items: $val;
	align-items: $val;
}

@mixin flex-justify-content($val){
	-webkit-justify-content: $val;
	justify-content: $val;
}

@mixin flex($val){
	-webkit-flex: $val;
	flex: $val;
}

@mixin transition($val){
	-webkit-transition: $val;
	-moz-transition: $val;
	-o-transition: $val;
	transition: $val;
}

.font{
	font-size: 80%;
}

#playlist::-webkit-scrollbar,
#playlists-wrap::-webkit-scrollbar,
#results-wrap::-webkit-scrollbar,
#queuelist::-webkit-scrollbar{
	width: 6px;
}

#playlist::-webkit-scrollbar-thumb,
#playlists-wrap::-webkit-scrollbar-thumb,
#results-wrap::-webkit-scrollbar-thumb,
#queuelist::-webkit-scrollbar-thumb{
	background: #464646;
	@include border-radius(.5em);
}


body {
	font-family: 'Montserrat', sans-serif;
	overflow: hidden;
}

.noise:after{
	content: "";
	position:absolute;
	z-index:-1;
	top:0;left:0;right:0;bottom:0;
	background-image: url('http://api.thumbr.it/whitenoise-361x370.png');
	opacity:0.1;
}

.highlight{
	text-shadow: $highlightshadow;
}

.active {
	color: #FFFFFF !important;
	border-left: 4px $activeBg solid;
	background: #333;
}

.activePl {
	color: #FFFFFF !important;
	border-left: 4px $activeColor2 solid;
	background: #333;
}

.alt{
	color: $queueColor!important;
}

.queued {
	border-left: 4px $queueColor solid;
}

.result-pl{
	color: $activeColor !important;
}

.result-item{
	@extend .active2;
}

.active2{
	color: $activeColor2 !important;
}

.activeAlt{
	color: $activeColor !important;
}

.front{
	color: $frontColor;
}

.hover-on {
	background-color: rgba(0, 0, 0, 0.1);
}

.lighter {
	background: rgba(100, 100, 100, 0.1);
}

.container {
	cursor: default;
	overflow: hidden;
	padding: .1em;
	height: 28px;
	font-size: 16px;
	@include transition(border 200ms);
	@extend .centerY;

	.title {
		overflow: hidden;
		white-space: nowrap;
		text-overflow: ellipsis;
		@include flex(1);
	}

	.inforight {
		margin-left:10px;
	}
	&:hover{
		@extend .hover-on;
	}
}

.result {
	@extend .container;
	font-size: 0.9em;
	overflow: hidden;
	height: 44px;

	.thumbnail {
		margin-left: 6px;
	}
}

.error {
	color: $errorColor !important;
}

#searchdiv{
	@extend .centerY;
	//position:relative;
	white-space: nowrap;
	margin-bottom:4px;
}

#player-wrap {
	//	width: 0;
	//height: 0;

	div {
		width: inherit;
		height: 100%;
	}
}

#searchbox, .textbox {
	display: inline-block;
	width: 100%;
	font-family: inherit;
	font-size: 16px;
	z-index: 1;
	height: 32px;
	border: none;
	outline: 0;
	&::-webkit-input-placeholder{
		color: $altColor;
	}
}



.spacer{
	width:4px;
}

#listHandle {
	@extend .spacer;
	cursor: ew-resize;
}

.lists {
	@extend .font;
	list-style-type: none;
	width: 100%;
	overflow-y: auto;
	padding: 0;
	margin: 0;
}

.bar-active {
	height: 5px;
	background: $activeColor2;
	width: 0;
	max-width: 100%;
	//@include border-radius(.5em);
	@include transition(width 80ms ease);
}

#current-wrap {
	position:relative;
	padding-right:5px;
	height:48px;
	margin-bottom: -48px;
	@extend .centerY;
	@include transition(margin-bottom 0.3s ease);
	background: rgba(0,0,0,.5);
	overflow: hidden;

	#img-wrap {
		position:relative;
		height:inherit;
		width:72px;
		@extend .centerY;
		cursor: default;

		#current-img {
			position: absolute;
			top:0;
			height: 100%;
			width: 100%;
			@include transition(opacity .2s);
		}

		.svgicon {
			margin-left:auto;
			margin-right: auto;
			font-size:1em;
			line-height:48px;

			@include transition(all .1s);
			opacity: 0;
			color: #fff !important;
		}

		&:hover {
			#current-img {
				opacity: 0.25;
			}
			.svgicon {
				opacity:1;
				font-size:1.8em;
			}
		}
	}
	#current-title{
		@include flex(1);
		width:0;
		padding-left:4px;
		padding-right:4px;
		cursor: auto;
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	#current-duration {
		margin-left: 10px;
		margin-right: 10px;
	}
	.svgicon {
		color: #bbb;
	}
}

#settings {
	background: $bgColor;
	white-space: nowrap;
	z-index: 4;
	cursor:default;
	@extend .centerY;
	padding:.2em;

	#volume-slider {
		//display: inline-block;
		position:relative;
		width:60px;
		padding:4px;
		.bg {
			@extend .dark-ui;
		}
	}
}

.playlist-rename {
	font-family: inherit;
	max-width: 80%;
}

.hidden {
	display: none!important;
}

.hidden-vis {
	visibility: hidden;
	background:none!important;
}

/* playlist view css end */

#container {
	width: 100%;
	@include display-flex();
	overflow:hidden;
	height: 98vh;

	#centerdiv {
		max-width: 1200px;
		height:100%;
		@include flex(600);
	}

	#leftdiv, #rightdiv {
		height: 100%;
		@include flex(1);
	}
}

.unselectable {
	-webkit-touch-callout: none;
	-webkit-user-select: none;
	-moz-user-select: none;
	-ms-user-select: none;
	user-select: none;
}

.selectable {
	-webkit-touch-callout: inherit;
	-webkit-user-select: auto;
	-moz-user-select: text;
	-ms-user-select: inherit;
	user-select: inherit;
}

.dark-ui {
	background: $uiColor;
	color: $fontColor;
}

.dark-bg {
	background: $bgColor;
}

.tooltip {
	z-index:3;
	.tip {
		position: absolute;
		max-width: 140px;
		overflow-x: hidden;
		text-overflow: ellipsis;
		white-space: nowrap;
		display: none;
		padding: 8px;
		top: -40px;
		left: -38px;
		font-size: initial;
		font-family: inherit;
		@include border-radius(4px);
		background: $menuBg !important;
		color: $menuColor !important;
		box-shadow: -1px 2px 6px #131313;
	}
	/*&:hover {
		.tip{

			display:inline !important;
		}*/
  //}
  //&:hover:after {
	  //  border-top: solid 10px $menuBg;
	  //  border-right: solid 10px transparent;
	  //  border-left: solid 10px transparent;
	  //  top: -8px;
	  //  content: "";
	  //  left: 0;
	  //  position: absolute;
	  //  z-index: 3;
  //}
}

.centerX {
	@include display-flex();
	@include flex-justify-content(center);
}

.centerY {
	@include display-flex();
	@include flex-align-items(center);
}

.empty-queue {
	width: 100%;
	height: 100%;
	@extend .centerY;
	@extend .centerX;
}

.contextmenu {
	background: $menuBg;
	position: absolute;
	display: block;
	opacity:0;
	@include transition(opacity .2s);
	box-shadow: -1px 2px 6px #131313;
	white-space: nowrap;
	z-index: 100;
	overflow:hidden;
	@include border-radius(.3em);
}

.menuitem{
	cursor: default;
	@extend .centerY;
	padding:.15em;
	min-width: 200px;
	@extend .font;
	height:24px;

	&:hover{
		background: $activeColor;
		color: $frontColor;
		//background-color: rgba(0, 0, 0, 0.2);
		.menuicon{
			color: $frontColor!important;
		}
	}
	.menuicon:before{
		text-align: left;
	}
}

table {
	border-collapse: collapse;
}

td{
	padding:0;
	margin:0;
}

.screen{
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
}

.panel{
	position: relative;
	max-width: 60%;
	padding: 2em;
	box-shadow: -2px 4px 12px #000;
	@include border-radius(.3em);
	h2{
		font-size: 1.2em;
		color: $frontColor;
		margin-bottom: 1em;
	}
}

#screendim {
	@extend .screen;
	background: rgba(0, 0, 0, 0.6);
	@include transition(opacity .4s);
}

#content-wrap {
	box-shadow: 0px 4px 4px $shadowColor;
	@include display-flex();
	@include flex-direction(column);
	height:98vh;
	overflow: hidden;

	#results-wrap {
		z-index: 10;
		position:relative;
		@include transition(none);
		height: 0;
		overflow-y: auto;
		overflow-x: hidden;
		background: $resultsColor;
		@include transition(height .2s);
	}

	#PlaylistContainer{
		position:relative;
		@include flex(1);
		height:100%; //This fixed Chrome-related nested-flexbox bug?
		max-height:100%;
		@include display-flex();
		@include transition(left .2s ease);
		@include flex-direction(row);
		left:0;
		overflow:hidden;
		width:200%;



		.transition-width{
			@include transition(width .2s ease);
		}

		#playlists-wrap{
			overflow-y:auto;
			width: 18%;

			&:hover #addPlaylistButton{
				visibility: visible;
			}
		}

		#playlist{
			//height:100%;
			@include flex(1);
			overflow-y:auto;
			//width:75%;
			//min-height:1px;
		}

		#queuelist{
			//position:relative;
			background: #222222;
			width:50%;
			/*padding:0;
			margin:0;
			bottom:0;*/
height:100%;
//@include transition(height 0.2s ease);
    }
  }
}

#addPlaylistButton{
	@extend .centerY;
	@extend .centerX;
	height: 30px;
	visibility: hidden;

	&:hover{
		//ackground: #363636;
		.svgicon{
			color: $hoverColor;
		}
	}
}

#posBar {
	position: relative;
	@include flex(1);
	max-height: 5px;
	div {
		height: 100%;
	}
}


.slider{
	//@include border-radius(.5em);
	overflow:hidden;
}

.queueactive{
	color: $hoverColor !important;
}

.svgicon {
	color: #888888;
	font-size:24px;
	text-shadow: none!important;
	position:relative;
	//@include transition(color .1s);

	&:hover{
		color: $hoverColor !important;
	}
}

.bigger{
	font-size: 1.6em!important;
}

.smaller{
	font-size: .9em!important;
}


/*
Animation example, for spinners
 */
.spinner:before {
	-moz-animation: spin 1s infinite linear;
	-o-animation: spin 1s infinite linear;
	-webkit-animation: spin 1s infinite linear;
	animation: spin 1s infinite linear;
	display: inline-block;
}

@-moz-keyframes spin {
	0% {
		-moz-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-moz-transform: rotate(359deg);
		-o-transform: rotate(359deg);
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
@-webkit-keyframes spin {
	0% {
		-moz-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-moz-transform: rotate(359deg);
		-o-transform: rotate(359deg);
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
@-o-keyframes spin {
	0% {
		-moz-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-moz-transform: rotate(359deg);
		-o-transform: rotate(359deg);
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
@-ms-keyframes spin {
	0% {
		-moz-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-moz-transform: rotate(359deg);
		-o-transform: rotate(359deg);
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}
@keyframes spin {
	0% {
		-moz-transform: rotate(0deg);
		-o-transform: rotate(0deg);
		-webkit-transform: rotate(0deg);
		transform: rotate(0deg);
	}

	100% {
		-moz-transform: rotate(359deg);
		-o-transform: rotate(359deg);
		-webkit-transform: rotate(359deg);
		transform: rotate(359deg);
	}
}

.ghost{
	opacity: .5;
}

@function knobsize($parentHeight){
	@return $parentHeight - 2px
}

.switch{
	margin-left:1em;
	overflow:hidden;
	display:inline-block;
	position:relative;
	background: $bgColor;
	width:36px;
	$height: 18px;
	height:$height;
	bottom:0;
	@include border-radius(.5em);
	a{
		position:absolute;
		@include transition(left 150ms ease);
		left: 0;
		margin:1px;
		height: knobsize($height);
		width: knobsize($height);
		background: $fontColor;
		@include border-radius(.5em);
	}
	.activeknob{
		background: $activeColor2!important;
	}
}

.playerOverlay {
	position: fixed !important;
	z-index: 300 !important;
	top: 50%;
	left: 50%;
	@include transform(translate(-50%, -50%));
}

.fill {
	z-index: 999;
	position: absolute;
	top: 0;
	left: 0;
	height: 100%;
	width: 100%;
}

.centerElements {
	@include display-flex();
	@include flex-align-items(center);
	@include flex-justify-content(center);
}


